<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EVUser.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EVUser</TokenIdentifier>
			<Abstract type="html">An Everlive user object that is the local representation of the user persisted to the Everlive cloud.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/allUsers:</TokenIdentifier>
			<Abstract type="html">Returns all users from everlive.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)allUsers:(EVObjectFetchResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/allUsers:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/fetchUser:block:</TokenIdentifier>
			<Abstract type="html">Returns the specific user.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchUser:(id)userId block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The id against which the user will be retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchUser:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/fetchUserWithEmail:block:</TokenIdentifier>
			<Abstract type="html">Returns the user for email.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchUserWithEmail:(NSString *)email block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>email</Name>
					<Abstract type="html">The email to get the user for.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchUserWithEmail:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/fetchWithAccessToken:block:</TokenIdentifier>
			<Abstract type="html">Returns information about the currently logged in user</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)fetchWithAccessToken:(NSString *)accessToken block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token that should be passed for authentication of the request.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchWithAccessToken:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/setNewPassword:withSecretQuestionId:andSecretAnswer:newPassword:block:</TokenIdentifier>
			<Abstract type="html">Sets a new password for the user with the specified username by using the secret question and secret answer</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)setNewPassword:(NSString *)username withSecretQuestionId:(NSString *)secretQuestionId andSecretAnswer:(NSString *)secretAnswer newPassword:(NSString *)newPassword block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username identifying the user</Abstract>
				</Parameter><Parameter>
					<Name>secretQuestionId</Name>
					<Abstract type="html">The secret question ID of the user</Abstract>
				</Parameter><Parameter>
					<Name>secretAnswer</Name>
					<Abstract type="html">The answer to the secret question</Abstract>
				</Parameter><Parameter>
					<Name>newPassword</Name>
					<Abstract type="html">The new password to set</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setNewPassword:withSecretQuestionId:andSecretAnswer:newPassword:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/setNewPasswordWithResetCode:newPassword:block:</TokenIdentifier>
			<Abstract type="html">Sets a new password for the user with the specified reset code</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)setNewPasswordWithResetCode:(NSString *)resetCode newPassword:(NSString *)newPassword block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>resetCode</Name>
					<Abstract type="html">The reset code</Abstract>
				</Parameter><Parameter>
					<Name>newPassword</Name>
					<Abstract type="html">The new password to set</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setNewPasswordWithResetCode:newPassword:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/resendVerificationEmailWithUserId:block:</TokenIdentifier>
			<Abstract type="html">Resends the verification email for the user with the specified ID</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)resendVerificationEmailWithUserId:(id)userId block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The id of the user</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resendVerificationEmailWithUserId:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/resendVerificationEmailWithUsername:block:</TokenIdentifier>
			<Abstract type="html">Resends the verification email for the user with the specified username</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)resendVerificationEmailWithUsername:(NSString *)username block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username for which to send verification email</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resendVerificationEmailWithUsername:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/currentUser</TokenIdentifier>
			<Abstract type="html">Return the current logged in user from disk.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (EVUser *)currentUser</Declaration>
			
			
			<Anchor>//api/name/currentUser</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/changePassword:oldPassword:newPassword:block:</TokenIdentifier>
			<Abstract type="html">Changes the password of the specified user.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)changePassword:(NSString *)username oldPassword:(NSString *)oldPassword newPassword:(NSString *)newPassword block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username of the user.</Abstract>
				</Parameter><Parameter>
					<Name>oldPassword</Name>
					<Abstract type="html">The old password of the user.</Abstract>
				</Parameter><Parameter>
					<Name>newPassword</Name>
					<Abstract type="html">The new password of the user.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/changePassword:oldPassword:newPassword:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/loginInWithUsername:password:block:</TokenIdentifier>
			<Abstract type="html">Makes an asynchronous request to log in a user with specified credentials.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)loginInWithUsername:(NSString *)username password:(NSString *)password block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username of the user.</Abstract>
				</Parameter><Parameter>
					<Name>password</Name>
					<Abstract type="html">The password of the user.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loginInWithUsername:password:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/loginWithFacebook:block:</TokenIdentifier>
			<Abstract type="html">Makes an asynchronous request to log in a user with facebook access token.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)loginWithFacebook:(NSString *)accessToken block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token obtained from Facebook.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loginWithFacebook:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/loginWithLiveId:block:</TokenIdentifier>
			<Abstract type="html">Makes an asynchrounous request to log in a user with live id access token</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)loginWithLiveId:(NSString *)accessToken block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token obtained from LiveId</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loginWithLiveId:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/loginWithGoogle:block:</TokenIdentifier>
			<Abstract type="html">Makes an asynchrounous request to log in a user with google access token</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)loginWithGoogle:(NSString *)accessToken block:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token obtained from LiveId</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loginWithGoogle:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/linkFacebookAccount:accessToken:block:</TokenIdentifier>
			<Abstract type="html">Links the everlive account with a Facebook account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)linkFacebookAccount:(NSString *)userId accessToken:(NSString *)accessToken block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The Id of the user</Abstract>
				</Parameter><Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token from the external provider</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/linkFacebookAccount:accessToken:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/linkLiveIdAccount:accessToken:block:</TokenIdentifier>
			<Abstract type="html">Links the everlive account with a LiveID account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)linkLiveIdAccount:(NSString *)userId accessToken:(NSString *)accessToken block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The Id of the user</Abstract>
				</Parameter><Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token from the external provider</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/linkLiveIdAccount:accessToken:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/linkGoogleAccount:accessToken:block:</TokenIdentifier>
			<Abstract type="html">Links the everlive account with a Google account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)linkGoogleAccount:(NSString *)userId accessToken:(NSString *)accessToken block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The Id of the user</Abstract>
				</Parameter><Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">The access token from the external provider</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/linkGoogleAccount:accessToken:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/unlinkFacebookAccount:block:</TokenIdentifier>
			<Abstract type="html">Unlinks the everlive user account and the Facebook account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)unlinkFacebookAccount:(NSString *)userId block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The user id</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unlinkFacebookAccount:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/unlinkLiveIdAccount:block:</TokenIdentifier>
			<Abstract type="html">Unlinks the everlive user account and the LiveID account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)unlinkLiveIdAccount:(NSString *)userId block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The user id</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unlinkLiveIdAccount:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/unlinkGoogleAccount:block:</TokenIdentifier>
			<Abstract type="html">Unlinks the everlive user account and the Google account</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)unlinkGoogleAccount:(NSString *)userId block:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The user id</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unlinkGoogleAccount:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVUser/logOut</TokenIdentifier>
			<Abstract type="html">Logs out the currenlty logged in user on disk.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>+ (void)logOut</Declaration>
			
			
			<Anchor>//api/name/logOut</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EVUser/signUp:</TokenIdentifier>
			<Abstract type="html">Signs up the user. Make sure that username and password are set. This will also enforce that the username isn&apos;t already taken.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>- (void)signUp:(EVUserResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/signUp:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EVUser/remove:</TokenIdentifier>
			<Abstract type="html">Removes the user from everlive. Must be authenticated to remove a user.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>- (void)remove:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remove:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EVUser/isAuthenticated</TokenIdentifier>
			<Abstract type="html">Checks if the current user is logged in.</Abstract>
			<DeclaredIn>EVUser.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isAuthenticated</Declaration>
			
			
			<Anchor>//api/name/isAuthenticated</Anchor>
		</Token>
		
	</File>
</Tokens>