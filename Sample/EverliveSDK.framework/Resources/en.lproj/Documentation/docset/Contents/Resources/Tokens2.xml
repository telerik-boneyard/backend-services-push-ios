<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EVFile.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EVFile</TokenIdentifier>
			<Abstract type="html">An Everlive file object that is the local representation of the file stored in Everlive cloud.</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVFile/file:block:</TokenIdentifier>
			<Abstract type="html">Returns the metadata information and the file data for the file with this id</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>+ (void)file:(id)fileId block:(EVFileResult)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileId</Name>
					<Abstract type="html">The unique id for the file.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVFile file, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/file:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVFile/metadata:block:</TokenIdentifier>
			<Abstract type="html">Returns the metadata information for the file with this id, including the file data</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>+ (void)metadata:(id)fileId block:(EVFileResult)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileId</Name>
					<Abstract type="html">The unique id for the file.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVFile file, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/metadata:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVFile/fileWithName:block:</TokenIdentifier>
			<Abstract type="html">Returns the file metadata and the file data from everlive</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>+ (void)fileWithName:(NSString *)name block:(EVObjectFetchResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the file to retrieve.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVFile file, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fileWithName:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVFile/metadataWithName:block:</TokenIdentifier>
			<Abstract type="html">Returns the file metadata from everlive</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>+ (void)metadataWithName:(NSString *)name block:(EVObjectFetchResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the file to retrieve.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVFile file, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/metadataWithName:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/EVFile/fileWithName:data:contentType:</TokenIdentifier>
			<Abstract type="html">Returns a new file instance.</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>+ (id)fileWithName:(NSString *)name data:(NSData *)data contentType:(NSString *)contentType</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the file to retrieve.</Abstract>
				</Parameter><Parameter>
					<Name>data</Name>
					<Abstract type="html">The content of the file.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">The content type of the file. If nil then it will try to resolve the content type based on byte representation (beta).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fileWithName:data:contentType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EVFile/save:</TokenIdentifier>
			<Abstract type="html">Saves the file to everlive.</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>- (void)save:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (BOOL success, NSError *error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/save:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EVFile/remove:</TokenIdentifier>
			<Abstract type="html">Deletes the file from everlive. Must be authenticated to perform the operation.</Abstract>
			<DeclaredIn>EVFile.h</DeclaredIn>			
			
			<Declaration>- (void)remove:(EVObjectResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to execute. The block should have the following argument signature: (EVUser user, NSError error)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remove:</Anchor>
		</Token>
		
	</File>
</Tokens>